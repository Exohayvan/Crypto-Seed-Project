name: Compile Files (Mobile)

on:
  workflow_run:
    workflows: ["Test Python Script"]
    types:
      - completed

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: /usr/local/lib/android/sdk
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_SDK: /usr/local/lib/android/sdk
      ANDROID_SDK_HOME: /usr/local/lib/android/sdk
      PATH: /usr/local/lib/android/sdk/cmdline-tools/latest/bin:/usr/local/lib/android/sdk/tools/bin:/usr/local/lib/android/sdk/platform-tools:/usr/local/lib/android/sdk/build-tools/30.0.3:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/snap/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
      pythonLocation: /opt/hostedtoolcache/Python/3.7.16/x64
      LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.7.16/x64/lib

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Set environment variables
      run: echo "PATH=${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${{ env.ANDROID_SDK_ROOT }}/platform-tools:${{ env.ANDROID_SDK_ROOT }}/build-tools/30.0.3:$PATH" >> $GITHUB_ENV

    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libstdc++6 openjdk-11-jdk zlib1g-dev libunwind-dev libssl-dev libncurses5-dev libffi-dev libsqlite3-dev libbz2-dev liblzma-dev uuid-dev libgdbm-dev tk-dev
        sudo apt-get install -y libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev
        sudo apt-get install -y libgstreamer1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad

    - name: Install Kivy and Cython
      run: |
        python -m pip install kivy cython

    - name: Install Buildozer
      run: |
        python -m pip install --upgrade buildozer

    - name: Download and set up Android SDK Command-line tools
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
        sudo mkdir -p ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools
        sudo unzip commandlinetools-linux-7302050_latest.zip -d ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools
        sudo mv ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/cmdline-tools ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest

    - name: Install Android SDK components
      run: |
        sdkmanager --install "platform-tools" "build-tools;30.0.3" "platforms;android-30"
        sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30"

    - name: Accept Android SDK licenses
      run: |
        yes | sdkmanager --licenses

    - name: Create .buildozer directory
      run: mkdir -p /home/runner/.buildozer/android/platform

    - name: Create android-sdk directory
      run: mkdir -p /home/runner/.buildozer/android/platform/android-sdk

    - name: Create symbolic link for build-tools
      run: ln -s ${{ env.ANDROID_SDK_ROOT }}/build-tools /home/runner/.buildozer/android/platform/android-sdk/build-tools

    - name: Create android-sdk tools bin directory
      run: mkdir -p /home/runner/.buildozer/android/platform/android-sdk/tools/bin

    - name: Create symbolic link for sdkmanager
      run: ln -s ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin/sdkmanager /home/runner/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager

    - name: Create symbolic link for android binary
      run: ln -s ${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin/avdmanager ${{ env.ANDROID_SDK_ROOT }}/tools/bin/android

    - name: Initialize Buildozer spec file
      run: |
        buildozer init

    - name: Set log_level to 2
      run: sed -i 's/^log_level = 1/log_level = 2/' buildozer.spec

    - name: Debug Android SDK
      run: |
        echo "ANDROID_SDK=$ANDROID_SDK"
        echo "ANDROID_SDK_HOME=$ANDROID_SDK_HOME"
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
        echo "Listing Android SDK directory:"
        ls -la $ANDROID_SDK

    - name: Update PATH for Android SDK
      run: |
        echo "ANDROID_SDK=$ANDROID_SDK"
        echo "ANDROID_SDK_HOME=$ANDROID_SDK_HOME"
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
        echo "cmdline-tools path: $ANDROID_SDK/cmdline-tools/latest/bin"
        echo "platform-tools path: $ANDROID_SDK/platform-tools"
        echo "build-tools path: $ANDROID_SDK/build-tools/30.0.3"
        echo "PATH=$GITHUB_PATH"
        echo "$ANDROID_SDK/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK/platform-tools" >> $GITHUB_PATH
        echo "$ANDROID_SDK/build-tools/30.0.3" >> $GITHUB_PATH

    - name: Check Android SDK directories
      run: |
        echo "Listing cmdline-tools:"
        ls -la $ANDROID_SDK/cmdline-tools/latest/bin
        echo "Listing platform-tools:"
        ls -la $ANDROID_SDK/platform-tools
        echo "Listing build-tools:"
        ls -la $ANDROID_SDK/build-tools/30.0.3

    - name: More Debug things
      run: |
        echo $ANDROID_HOME
        echo $ANDROID_SDK_ROOT
        echo $PATH
        which sdkmanager
        sdkmanager --list

    - name: Build APK
      run: buildozer android debug

    - name: Upload APK artifact
      uses: actions/upload-artifact@v2
      with:
        name: APK
        path: bin/*.apk
