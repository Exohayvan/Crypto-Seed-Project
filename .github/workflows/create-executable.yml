name: Compile Files

on:
  push:
    branches: [ "compile-test" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - run: pip install -r requirements.txt pyinstaller
    - run: pyinstaller --onefile main.py

    # Create a .app file on MacOS
    - name: Create .app file
      if: matrix.os == 'macos-latest'
      run: |
        mkdir -p dist/main.app/Contents/MacOS
        cp dist/main dist/main.app/Contents/MacOS/
        cp icon.icns dist/main.app/Contents/Resources/
        cp Info.plist dist/main.app/Contents/
    
    - name: Get version
      shell: bash
      run: echo "VERSION=$(python main.py -v true)" | tee -a $GITHUB_ENV

    # Run the application on different operating systems
    - name: Run on Windows
      if: matrix.os == 'windows-latest'
      run: |
        .\dist\main.exe -t true

    - name: Run on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        ./dist/main -t true

    - name: Run on MacOS
      if: matrix.os == 'macos-latest'
      run: open dist/main.app

    # Upload the artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.VERSION }}
        path: |
          dist/*
          !dist/main  # Exclude the original executable from the artifact
