name: Compile and Upload main.py with NixOS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build Nix package
      run: |
        docker pull nixos/nix
        docker run --rm -v $PWD:/app -w /app nixos/nix sh -c "\
          cat > default.nix << EOF
          { pkgs ? import <nixpkgs> {} }:

          let
            python = pkgs.python38;
            nuitka = python.pkgs.nuitka;
          in pkgs.stdenv.mkDerivation rec {
            pname = \"my-python-app\";
            version = \"0.1.0\";

            src = ./.;

            buildInputs = [ python nuitka ];

            buildPhase = ''
              python -m nuitka --follow-imports main.py --output-dir=$out --unstripped --remove-output
            '';

            installPhase = ''
              mkdir -p $out/bin
              cp main.bin $out/bin/main
            '';

            meta = with pkgs.stdenv.lib; {
              description = \"My Python application compiled with Nuitka\";
              maintainers = with maintainers; [ ];
            };
          }
          EOF
          nix-build; \
          tar czvf result.tar.gz result"

    - name: Upload Nix package
      uses: actions/upload-artifact@v2
      with:
        name: my-python-app.nix
        path: result.tar.gz
