name: Compile Files

on:
  push:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - run: pip install -r requirements.txt pyinstaller

    # Get version
    - name: Get version
      id: get_version
      shell: bash
      run: echo "::set-output name=version::$(python main.py -v true)"

    # Get timestamp
    - name: Get timestamp
      id: get_timestamp
      run: echo "::set-output name=timestamp::$(date +%Y%m%d%H%M%S)"

    # Define the names for each operating system
    - name: Define names
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          OS_NAME="Windows"
        elif [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
          OS_NAME="Linux"
        else
          OS_NAME="MacOS"
        fi
        FILE_NAME="Build_${OS_NAME}-${{ steps.get_version.outputs.version }}"
        echo "FILE_NAME=$FILE_NAME" | tee -a $GITHUB_ENV

    - run: pyinstaller --onefile --name ${{ env.FILE_NAME }} main.py

    # Run the application on different operating systems
    - name: Run on Windows
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: .\dist\%FILE_NAME% -t true

    - name: Run on Linux
      if: matrix.os == 'ubuntu-latest'
      run: ./dist/$FILE_NAME -t true

    - name: Run on MacOS
      if: matrix.os == 'macos-latest'
      run: ./dist/$FILE_NAME -t true

    # Upload the artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: Build_${{ steps.get_version.outputs.version }}_${{ github.run_id }}_${{ steps.get_timestamp.outputs.timestamp }}
        path: dist/${{ env.FILE_NAME }}
